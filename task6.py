from gmpy2 import *

f = open('task6.txt', 'r+')

def challenge1():
    N = int("17976931348623159077293051907890247336179769789423065727343008115\
77326758055056206869853794492129829595855013875371640157101398586\
47833778606925583497541085196591615128057575940752635007475935288\
71082364994994077189561705436114947486504671101510156394068052754\
0071584560878577663743040086340742855278549092581".replace("\n",""))
    A = isqrt(N) + 1
    x = isqrt(A**2 - N)
    p = A - x
    q = A + x
    f.write("Answer 1 is "+ str(p) + "\n")
    print "Answer 1 is", p
    return (p, q)
    
def challenge2():
    N = int("648455842808071669662824265346772278726343720706976263060439070378\
79730861808111646271401527606141756919558732184025452065542490671989\
2428844841839353281972988531310511738648965962582821502504990264452\
1008852816733037111422964210278402893076574586452336833570778346897\
15838646088239640236866252211790085787877".replace("\n",""))
    factored = False
    A = isqrt(N) + 1
    while not factored:
        x = isqrt(A**2 - N)
        p = A - x
        q = A + x
        if p * q == N:
            factored == True
            f.write("Answer 2 is "+ str(p) + "\n")
            print "Answer 2 is", p
            break
        else:
            A += 1

def challenge3():
    N = int("72006226374735042527956443552558373833808445147399984182665305798191\
63556901883377904234086641876639384851752649940178970835240791356868\
77441155132015188279331812309091996246361896836573643119174094961348\
52463970788523879939683923036467667022162701835329944324119217381272\
9276147530748597302192751375739387929".replace("\n", ""))
    A = isqrt(6*N)
    x = isqrt(A**2 - 6*N + A)
    
    p = div(A - x, 3)
    q = div(A + x, 2) + 1
    f.write("Answer 3 is "+ str(p) + "\n")
    print "Answer 3 is", p
        
(p, q) = challenge1()
challenge2()
challenge3()

ct = int("22096451867410381776306561134883418017410069787892831071731839143676135600120538004282329650473509424343946219751512256465839967942889460764542040581564748988013734864120452325229320176487916666402997509188729971690526083222067771600019329260870009579993724077458967773697817571267229951148662959627934791540")
#print hex(ct)[2:-1]
phi = mul((p - 1), (q - 1))
e = 65537
d = invert(e, phi)
#print d
pt = powmod(mpz(ct), d, p*q)
res = hex(pt).split('00')[1]
print res
f.write((res).decode('hex'))
f.close()